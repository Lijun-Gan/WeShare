{"version":3,"sources":["utils/fetchData.js","utils/valid.js","redux/actions/authAction.js","pages/home.js","pages/login.js","pages/register.js","redux/actions/globalTypes.js","pages sync /^/.//.*$","components/NotFound.js","customRouter/PageRender.js","components/alert/Loading.js","components/alert/Toast.js","components/alert/Alert.js","App.js","reportWebVitals.js","redux/reducers/authReducer.js","redux/reducers/alertReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["postDataAPI","url","post","token","a","axios","headers","Authorization","res","valid","fullname","username","email","password","cf_password","err","length","replace","test","validateEmail","errMsg","errLength","Object","keys","login","data","dispatch","type","GLOBALTYPES","ALERT","payload","loading","AUTH","access_token","user","localStorage","setItem","success","msg","error","response","refreshToken","getItem","register","check","Home","Login","useState","userData","setUserData","typePass","setTypePass","auth","useSelector","state","useDispatch","history","useHistory","useEffect","push","handleChangeInput","e","target","name","value","className","onSubmit","preventDefault","htmlFor","id","aria-describedby","onChange","onClick","disabled","to","style","color","Register","alert","gender","typeCfPass","setTypeCfPass","background","toLowerCase","defaultChecked","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports","NotFound","minHeight","top","left","transform","PageRender","useParams","page","pageName","React","createElement","require","default","generatePage","Loading","zIndex","width","height","viewBox","stroke","strokeWidth","fill","points","x","y","Toast","handleShow","bgColor","right","minWidth","title","data-dismiss","outline","body","Notify","App","console","log","Alert","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","action","alertReducer","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","DataProvider","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64099374.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getDataAPI = async (url, token) => {\n    const res = await axios.get(`/api/${url}`, {\n        headers: { Authorization: token}\n    })\n    return res;\n}\n\nexport const postDataAPI = async (url, post, token) => {\n    const res = await axios.post(`/api/${url}`, post, {\n        headers: { Authorization: token}\n    })\n    return res;\n}\n\nexport const putDataAPI = async (url, post, token) => {\n    const res = await axios.put(`/api/${url}`, post, {\n        headers: { Authorization: token}\n    })\n    return res;\n}\n\nexport const patchDataAPI = async (url, post, token) => {\n    const res = await axios.patch(`/api/${url}`, post, {\n        headers: { Authorization: token}\n    })\n    return res;\n}\n\nexport const deleteDataAPI = async (url, token) => {\n    const res = await axios.delete(`/api/${url}`, {\n        headers: { Authorization: token}\n    })\n    return res;\n}","const valid = ({fullname, username, email, password, cf_password}) => {\n    const err = {}\n\n    if(!fullname) {\n        err.fullname = \"Please add your full name.\"\n    }else if(fullname.length > 25){\n        err.fullname = \"Full name is up to 25 characters long.\"\n    }\n\n    if(!username) {\n        err.username = \"Please add your user name.\"\n    }else if(username.replace(/ /g, '').length > 25){\n        err.username = \"User name is up to 25 characters long.\"\n    }\n\n    if(!email) {\n        err.email = \"Please add your email.\"\n    }else if(!validateEmail(email)){\n        err.email = \"Email format is incorrect.\"\n    }\n\n    if(!password) {\n        err.password = \"Please add your password.\"\n    }else if(password.length < 6){\n        err.password = \"Password must be at least 6 characters.\"\n    }\n\n    if(password !== cf_password) {\n        err.cf_password = \"Confirm password did not match.\"\n    }\n\n    return {\n        errMsg: err,\n        errLength: Object.keys(err).length\n    }\n}\n\n\n\nfunction validateEmail(email) {\n    // eslint-disable-next-line\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n  \nexport default valid","import { GLOBALTYPES } from './globalTypes'\nimport { postDataAPI } from '../../utils/fetchData'\nimport valid from '../../utils/valid'\n\n\nexport const login = (data) => async (dispatch) => {\n    try {\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {loading: true} })\n        const res = await postDataAPI('login', data)\n   \n        dispatch({ \n        \n            type: GLOBALTYPES.AUTH, \n            payload: {\n                token: res.data.access_token,\n                user: res.data.user\n            } \n        })\n\n        localStorage.setItem(\"firstLogin\", true)\n\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n        \n            payload: {\n                success: res.data.msg\n                // token: res.data.access_token,\n                // user: res.data.user\n            } \n        })\n\n//         dispatch({ \n//             type: GLOBALTYPES.ALERT, \n//             payload: {\n//                 success: res.data.msg\n//             } \n//         })\n        \n    } catch (err) {\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                error: err.response.data.msg\n            } \n        })\n    }\n}\n\n\nexport const refreshToken = () => async (dispatch) => {\n    const firstLogin = localStorage.getItem(\"firstLogin\")\n    if(firstLogin){\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {loading: true} })\n\n        try {\n            const res = await postDataAPI('refresh_token')\n            dispatch({ \n                type: GLOBALTYPES.AUTH, \n\n                payload: {\n                    token: res.data.access_token,\n                    user: res.data.user\n                } \n            })\n\n          \n            dispatch({ type: GLOBALTYPES.ALERT, payload: {} })\n\n        } catch (err) {\n            dispatch({ \n                type: GLOBALTYPES.ALERT, \n\n                payload: {\n                    error: err.response.data.msg\n                } \n            })\n        }\n    }\n}\n\nexport const register = (data) => async (dispatch) => {\n    const check = valid(data)\n    if(check.errLength > 0)\n    return dispatch({type: GLOBALTYPES.ALERT, payload: check.errMsg})\n\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}})\n\n        const res = await postDataAPI('register', data)\n        dispatch({ \n            type: GLOBALTYPES.AUTH, \n            payload: {\n                token: res.data.access_token,\n                user: res.data.user\n            } \n        })\n\n        localStorage.setItem(\"firstLogin\", true)\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                success: res.data.msg\n            } \n        })\n    } catch (err) {\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                error: err.response.data.msg\n            } \n        })\n    }\n}\n\n\n// export const logout = () => async (dispatch) => {\n//     try {\n//         localStorage.removeItem('firstLogin')\n//         await postDataAPI('logout')\n//         window.location.href = \"/\"\n//     } catch (err) {\n//         dispatch({ \n//             type: GLOBALTYPES.ALERT, \n//             payload: {\n//                 error: err.response.data.msg\n//             } \n//         })\n//     }\n// }","import React from 'react'\n\nconst Home = () =>{\n    return (\n        <div>\n            Home\n        </div>\n    )\n}\n\nexport default Home","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { login } from '../redux/actions/authAction'\nimport { useDispatch, useSelector } from 'react-redux'\n\n\nconst Login = () => {\n    const initialState = { email: '', password: '' }\n    const [userData, setUserData] = useState(initialState)\n    const { email, password } = userData\n\n    const [typePass, setTypePass] = useState(false)\n\n    const { auth } = useSelector(state => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        if(auth.token) history.push(\"/\")\n    }, [auth.token, history])\n\n    const handleChangeInput = e => {\n        const { name, value } = e.target\n        setUserData({...userData, [name]:value})\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        dispatch(login(userData))\n    }\n\n    return (\n        <div className=\"auth_page\">\n            <form onSubmit={handleSubmit}>\n                <h3 className=\"text-uppercase text-center mb-4\">WeShare</h3>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" name=\"email\"\n                    aria-describedby=\"emailHelp\" onChange={handleChangeInput} value={email} />\n                    \n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        We'll never share your email with anyone else.\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n\n                    <div className=\"pass\">\n                        \n                        <input type={ typePass ? \"text\" : \"password\" } \n                        className=\"form-control\" id=\"exampleInputPassword1\"\n                        onChange={handleChangeInput} value={password} name=\"password\" />\n\n                        <small onClick={() => setTypePass(!typePass)}>\n                            {typePass ? 'Hide' : 'Show'}\n                        </small>\n                    </div>\n                   \n                </div>\n                \n                <button type=\"submit\" className=\"btn btn-dark w-100\"\n                disabled={email && password ? false : true}>\n                    Login\n                </button>\n\n                <p className=\"my-2\">\n                    You don't have an account? <Link to=\"/register\" style={{color: \"crimson\"}}>Register Now</Link>\n                </p>\n            </form>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, Link } from 'react-router-dom'\nimport { register } from '../redux/actions/authAction'\n\nconst Register = () => {\n    const { auth, alert } = useSelector(state => state)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const initialState = { \n        fullname: '', username: '', email: '', password: '', cf_password: '', gender: 'female'\n    }\n    const [userData, setUserData] = useState(initialState)\n    const { fullname, username, email, password, cf_password } = userData\n\n    const [typePass, setTypePass] = useState(false)\n    const [typeCfPass, setTypeCfPass] = useState(false)\n\n    useEffect(() => {\n        if(auth.token) history.push(\"/\")\n    }, [auth.token, history])\n\n    \n    const handleChangeInput = e => {\n        const { name, value } = e.target\n        setUserData({...userData, [name]:value})\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        dispatch(register(userData))\n    }\n\n    return (\n        <div className=\"auth_page\">\n            <form onSubmit={handleSubmit}>\n                <h3 className=\"text-uppercase text-center mb-4\">V-Network</h3>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"fullname\">Full Name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"fullname\" name=\"fullname\"\n                    onChange={handleChangeInput} value={fullname}\n                    style={{background: `${alert.fullname ? '#fd2d6a14' : ''}`}} />\n                    \n                    <small className=\"form-text text-danger\">\n                        {alert.fullname ? alert.fullname : ''}\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">User Name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\"\n                    onChange={handleChangeInput} value={username.toLowerCase().replace(/ /g, '')}\n                    style={{background: `${alert.username ? '#fd2d6a14' : ''}`}} />\n                    \n                    <small className=\"form-text text-danger\">\n                        {alert.username ? alert.username : ''}\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" name=\"email\"\n                    onChange={handleChangeInput} value={email}\n                    style={{background: `${alert.email ? '#fd2d6a14' : ''}`}} />\n                    \n                    <small className=\"form-text text-danger\">\n                        {alert.email ? alert.email : ''}\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n\n                    <div className=\"pass\">\n                        \n                        <input type={ typePass ? \"text\" : \"password\" } \n                        className=\"form-control\" id=\"exampleInputPassword1\"\n                        onChange={handleChangeInput} value={password} name=\"password\"\n                        style={{background: `${alert.password ? '#fd2d6a14' : ''}`}} />\n\n                        <small onClick={() => setTypePass(!typePass)}>\n                            {typePass ? 'Hide' : 'Show'}\n                        </small>\n                    </div>\n\n                    <small className=\"form-text text-danger\">\n                        {alert.password ? alert.password : ''}\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"cf_password\">Confirm Password</label>\n\n                    <div className=\"pass\">\n                        \n                        <input type={ typeCfPass ? \"text\" : \"password\" } \n                        className=\"form-control\" id=\"cf_password\"\n                        onChange={handleChangeInput} value={cf_password} name=\"cf_password\"\n                        style={{background: `${alert.cf_password ? '#fd2d6a14' : ''}`}} />\n\n                        <small onClick={() => setTypeCfPass(!typeCfPass)}>\n                            {typeCfPass ? 'Hide' : 'Show'}\n                        </small>\n                    </div>\n\n                    <small className=\"form-text text-danger\">\n                        {alert.cf_password ? alert.cf_password : ''}\n                    </small>\n                </div>\n\n                <div className=\"row justify-content-between mx-0 mb-1\">\n                    <label htmlFor=\"male\">\n                        Male: <input type=\"radio\" id=\"male\" name=\"gender\"\n                        value=\"male\"  onChange={handleChangeInput} />\n                    </label>\n\n                    <label htmlFor=\"female\">\n                        Female: <input type=\"radio\" id=\"female\" name=\"gender\"\n                        value=\"female\" defaultChecked onChange={handleChangeInput} />\n                    </label>\n\n                    <label htmlFor=\"other\">\n                        Other: <input type=\"radio\" id=\"other\" name=\"gender\"\n                        value=\"other\" onChange={handleChangeInput} />\n                    </label>\n                </div>\n                \n                <button type=\"submit\" className=\"btn btn-dark w-100\">\n                    Register\n                </button>\n\n                <p className=\"my-2\">\n                    Already have an account? <Link to=\"/\" style={{color: \"crimson\"}}>Login Now</Link>\n                </p>\n            </form>\n        </div>\n    )\n}\n\nexport default Register\n","export const GLOBALTYPES = {\n    AUTH: \"AUTH\",\n    ALERT: \"ALERT\",\n    // THEME: 'THEME',\n    // STATUS: 'STATUS',\n    // MODAL: 'MODAL',\n    // SOCKET: 'SOCKET',\n    // ONLINE: 'ONLINE',\n    // OFFLINE: 'OFFLINE',\n    // CALL: 'CALL',\n    // PEER: 'PEER'\n}\n\nexport const EditData = (data, id, post) => {\n    const newData = data.map(item => \n        (item._id === id ? post : item)\n    )\n    return newData;\n}\n\nexport const DeleteData = (data, id) => {\n    const newData = data.filter(item => item._id !== id)\n    return newData;\n}","var map = {\n\t\"./home\": 23,\n\t\"./home.js\": 23,\n\t\"./login\": 24,\n\t\"./login.js\": 24,\n\t\"./register\": 37,\n\t\"./register.js\": 37\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 47;","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div className=\"position-relative\" style={{minHeight: 'calc(100vh - 70px)'}}>\n            <h2 className=\"position-absolute text-secondary\"\n            style={{top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\n                404 | Not Found.\n            </h2>\n        </div>\n    )\n}\n\nexport default NotFound\n","import React from 'react'\nimport {useParams} from 'react-router-dom'\nimport NotFound from '../components/NotFound'\n// import { useSelector } from 'react-redux'\n\nconst generatePage = (pageName) => {\n\n    const component = () => require(`../pages/${pageName}`).default\n\n    try {\n        return React.createElement(component())\n    } catch (err) {\n        return <NotFound />\n    }\n}\n\nconst PageRender = () => {\n    const {page, id} = useParams()\n\n    // const { auth } = useSelector(state => state)\n    \n    let pageName = \"\";\n    \n    // if(auth.token){\n        if(id){\n            pageName = `${page}/[id]`\n        }else{\n            pageName = `${page}`\n        }\n    // }\n\n    return generatePage(pageName)\n}\n\nexport default PageRender\n","import React from 'react'\n\nconst Loading = () => {\n    return (\n        <div className=\"position-fixed w-100 h-100 text-center loading\"\n        style={{background: \"#0008\", color: \"white\", top: 0, left: 0, zIndex: 50}}>\n\n            <svg width=\"205\" height=\"250\" viewBox=\"0 0 40 50\">\n                <polygon stroke=\"#fff\" strokeWidth=\"1\" fill=\"none\"\n                points=\"20,1 40,40 1,40\" />\n                <text fill=\"#fff\" x=\"5\" y=\"47\">Loading</text>\n            </svg>\n            \n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react'\n\nconst Toast = ({msg, handleShow, bgColor}) => {\n    return (\n        <div className={`toast show position-fixed text-light ${bgColor}`}\n        style={{top: '5px', right: '5px', minWidth: '200px', zIndex: 50}}>\n            <div className={`toast-header text-light ${bgColor}`}>\n                <strong className=\"mr-auto text-light\">{msg.title}</strong>\n                <button className=\"ml-2 mb-1 close text-light\"\n                data-dismiss=\"toast\" style={{outline: 'none'}}\n                onClick={handleShow}>\n                    &times;\n                </button>\n            </div>\n            <div className=\"toast-body\">\n                {msg.body}\n            </div>\n        </div>\n    )\n}\n\nexport default Toast\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {GLOBALTYPES} from '../../redux/actions/globalTypes'\n\nimport Loading from \"./Loading\"\nimport Toast from \"./Toast\"\n\nconst Notify = () =>{\n    const {alert} =  useSelector(state=> state )\n\n    const dispatch = useDispatch()\n\n    return (\n        <div>\n            {alert.loading && <Loading />}\n            {alert.error && <Toast msg={{title: 'Error', body: alert.error}} \n                            handleShow={()=> dispatch({ type: GLOBALTYPES.ALERT, payload: {} })}\n                            bgColor=\"bg-danger\" />}\n\n            {alert.success &&  <Toast msg={{title: 'Success', body: alert.success}} \n                                handleShow={()=> dispatch({ type: GLOBALTYPES.ALERT, payload: {} })}\n                                bgColor=\"bg-success\"  />}\n        </div>\n    )\n}\n\nexport default Notify","import { useEffect } from 'react'\n\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport PageRender from './customRouter/PageRender'\nimport Home from './pages/home'\nimport Login from './pages/login'\n\nimport Alert from './components/alert/Alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { refreshToken } from './redux/actions/authAction'\n\n\nfunction App() {\n    const {auth } = useSelector(state=>state)\n    const dispatch = useDispatch()\n\n    useEffect(()=>{\n        console.log(\"refresh token\")\n        dispatch(refreshToken())\n    },[dispatch])\n\n    return(\n        <Router>\n            <Alert />\n\n            <input type=\"checkbox\" id=\"theme\" />\n            <div className=\"App\">\n                <div className=\"main\">\n                    <Route exact path=\"/\" component={auth.token ? Home : Login} />\n                    <Route exact path=\"/:page\" component={PageRender} />\n                    <Route exact path=\"/:page/:id\" component={PageRender} />\n                </div>\n            </div>\n        </Router>\n    );\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GLOBALTYPES } from '../actions/globalTypes'\n\nconst initialState = {}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type){\n        case GLOBALTYPES.AUTH:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nexport default authReducer","import { GLOBALTYPES } from '../actions/globalTypes'\n\nconst initialState = {}\n\nconst alertReducer = (state = initialState, action) => {\n    switch (action.type){\n        case GLOBALTYPES.ALERT:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nexport default alertReducer\n","import { combineReducers } from 'redux'\nimport auth from './authReducer'\nimport alert from './alertReducer'\n// import theme from './themeReducer'\n// import profile from './profileReducer'\n// import status from './statusReducer'\n// import homePosts from './postReducer'\n// import modal from './modalReducer'\n// import detailPost from './detailPostReducer'\n// import discover from './discoverReducer'\n// import suggestions from './suggestionsReducer'\n// import socket from './socketReducer'\n// import notify from './alertReducer'\n// import message from './messageReducer'\n// import online from './onlineReducer'\n// import call from './callReducer'\n// import peer from './peerReducer'\n\n\nexport default combineReducers({\n    auth,\n    alert,\n    // theme,\n    // profile,\n    // status,\n    // homePosts,\n    // modal,\n    // detailPost,\n    // discover,\n    // suggestions,\n    // socket,\n    // notify,\n    // message,\n    // online,\n    // call,\n    // peer\n})","import { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './reducers/index'\n\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\nconst DataProvider = ({children}) => {\n    return(\n        <Provider store={store}>\n            {children}\n        </Provider>\n    )\n}\n\nexport default DataProvider","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport DataProvider from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}